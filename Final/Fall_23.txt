Q-3-a)
------
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

class AddButton implements ActionListener {
    JFrame frame;
    JButton addButton;
    int count = 0;
    AddButton(){
        frame = new JFrame();

        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(400,200);
        frame.setLayout(null);


        addButton = new JButton("ADD");
        addButton.setBounds(130, 30, 100, 30);
        frame.add(addButton);
        addButton.addActionListener(this);
        frame.setVisible(true);
    }

    public void actionPerformed(ActionEvent e){
        count++;
        System.out.println("clicked");
        JButton newBtn = new JButton("btn"+count);
        newBtn.setBounds(30, 60 + count * 30, 70, 30);
        frame.revalidate();
        frame.repaint();
        frame.add(newBtn);
    }
}

public class GUI_Fall23 {

    public static void main(String[] args) {
        new AddButton();
    }

}

Q-3-b)
---------

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

class Calc implements ActionListener{
    JFrame frame;
    JTextField n1,n2,n3,result;
    JButton max,min,avg,cl;
    JLabel l1, l2,l3,lR;
    Calc(){
        frame = new JFrame();
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(600,400);
        frame.setLayout(null);

        l1 = new JLabel("Num 1");
        l1.setBounds(20, 30, 50, 20);
        frame.add(l1);
        n1 = new JTextField("");
        n1.setBounds(80, 30, 50, 20);
        frame.add(n1);

        l2 = new JLabel("Num 2");
        l2.setBounds(150, 30, 50, 20);
        frame.add(l2);
        n2 = new JTextField("");
        n2.setBounds(220, 30, 50, 20);
        frame.add(n2);

        l3 = new JLabel("Num 3");
        l3.setBounds(290, 30, 50, 20);
        frame.add(l3);
        n3 = new JTextField("");
        n3.setBounds(360, 30, 50, 20);
        frame.add(n3);

        lR = new JLabel("Found");
        lR.setBounds(430, 30, 50, 20);
        frame.add(lR);
        result = new JTextField("Result");
        result.setBounds(500, 30, 50, 20);
        frame.add(result);

        max = new JButton("Maximum");
        max.setBounds(80, 80, 100, 20);
        frame.add(max);
        max.addActionListener(this);

        min = new JButton("Minimum");
        min.setBounds(190, 80, 100, 20);
        frame.add(min);
        min.addActionListener(this);

        avg = new JButton("Average");
        avg.setBounds(300, 80, 100, 20);
        frame.add(avg);
        avg.addActionListener(this);

        cl = new JButton("clear");
        cl.setBounds(410, 80, 90, 20);
        frame.add(cl);
        cl.addActionListener(this);

        frame.setVisible(true);
    }

    public void actionPerformed(ActionEvent e){

        int[] numArray ={
                Integer.parseInt(n1.getText()),
                Integer.parseInt(n2.getText()),
                Integer.parseInt(n3.getText())
        };
        int max_number = numArray[0];
        int min_number = numArray[0];
        int avarage = 0, sum = 0;
        for(int i = 0; i < numArray.length; i++){
            sum += i;
            avarage = sum / numArray.length+1;

            if(numArray[i]> max_number){
                max_number = numArray[i];
            }
            else if(numArray[i] < min_number){
                min_number = numArray[i];
            }
        }

        if(e.getSource() == max){

            result.setText(String.valueOf(max_number));
        }
        else if(e.getSource() == min){

            result.setText(String.valueOf(min_number));
        }
        else if(e.getSource() == avg){
            result.setText(String.valueOf(avarage));
        }
        else if(e.getSource() == cl){
            n1.setText("");
            n2.setText("");
            n3.setText("");
            result.setText("");
        }
    }

}


public class GUI_Fall23_2 {
    public static void main(String[] args) {
        new Calc();
    }

}



Q-4
-------

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

class Address{
    String building_number, area, city;
    int zip_code;
    Address(String building_number,String area,String city,int zip_code){
        this.building_number=building_number;
        this.area=area;
        this.city=city;
        this.zip_code=zip_code;
    }
    int getZip_code(){
        return zip_code;
    }
    public String toString(){
        return building_number+", "+ area + ", " + city + ", " + zip_code;
    }
}
public class ArrayList_Sort_Fall_23 {

    public static void main(String[] args) {

        ArrayList <Address> list = new ArrayList<>();
        list.add(new Address("19/A","Dhanmondi","Dhaka",1209));
        list.add(new Address("2/A","Tejgaon","Dhaka",1215));
        list.add(new Address("65","Nirala","Khulna",9100));

        list.add(1, new Address("215","Aamtola","Barishal",8200));
        list.set(2, new Address("36","Gulshan","Dhaka",1212));

        Collections.sort(list, new Comparator<Address>(){
            public int compare(Address a1, Address a2){
                return  Integer.compare(a1.getZip_code(), a2.getZip_code());
            }
        });
        System.out.println("After sorting by zip code:");
        for (Address a : list) {
            System.out.println(a);
        }
        list.remove(2);
        System.out.println("\nAfter deleting object at index 2:");
        for (Address a : list) {
            System.out.println(a);
        }
    }
}
